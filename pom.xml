<project 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.apache.maven</groupId>
  <artifactId>unbound</artifactId>
  <version>1.0.0</version>
  <name>Unbound</name>
  <description>
    Maven Unbound is a file level translator of Apache Maven POM files to and
    from JSON and HOCON POM formats.  It provides both a library to support
    these translations and a command line interface to translate between
    XML, JSON and HOCON formats of POMs.  The CLI can be called with
    the mvnu script in this directory.  
    ––generate–hocon and 
    ––generate–json command line flags are added to
    translate a Maven project from XML to JSON and/or HOCON.  Then mvnu can
    be called just like mvn can but the JSON or HOCON POM files will generate
    pom.xml files on the fly which will in turn be built using Maven.
  </description>
  <url>https://hunterpayne.github.io/maven-unbound-site/index.html</url>
  <inceptionYear>2019</inceptionYear>
  <licenses>
    <license>
      <name>Apache License Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>hunterpayne</id>
      <name>Hunter Payne</name>
      <email>no-spam</email>
      <roles>
        <role>developer</role>
      </roles>
      <timezone>America/Los_Angeles</timezone>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Thomas Boyles</name>
      <email>no-spam</email>
      <roles>
        <role>marketing</role>
        <role>testing</role>
      </roles>
      <timezone>America/Los_Angeles</timezone>
    </contributor>
  </contributors>
  <scm>
    <connection>
      scm:git:https://github.com/hunterpayne/maven-unbound.git
    </connection>
    <developerConnection>
      scm:git:https://github.com/hunterpayne/maven-unbound.git
    </developerConnection>
    <url>https://github.com/hunterpayne/maven-unbound</url>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/hunterpayne/maven-unbound/issues</url>
  </issueManagement>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <findbugsOmissions>
      MutableStaticFields,FindNullDeref,MethodReturnCheck,UnreadFields
    </findbugsOmissions>
    <version.scala.release>2.12.8</version.scala.release>
    <maven.compiler.source>${version.java}</maven.compiler.source>
    <maven.compiler.target>${version.java}</maven.compiler.target>
    <packageSection>Development</packageSection>
    <rpmPackageDependency>apache-maven</rpmPackageDependency>
    <version.scalatest>3.0.6</version.scalatest>
    <mainClass>org.apache.maven.unbound.Cli</mainClass>
    <version.java>1.8</version.java>
    <launcherName>mvnu</launcherName>
    <debPackageDependency>maven</debPackageDependency>
    <maven.build.timestamp.format></maven.build.timestamp.format>
    <versionScalaRelease>${version.scala.release}</versionScalaRelease>
    <version.scala.epoch>2.12</version.scala.epoch>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${versionScalaRelease}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang.modules</groupId>
      <artifactId>scala-xml_${version.scala.epoch}</artifactId>
      <version>1.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-reflect</artifactId>
      <version>${version.scala.release}</version>
    </dependency>
    <dependency>
      <groupId>com.iheart</groupId>
      <artifactId>ficus_${version.scala.epoch}</artifactId>
      <version>1.4.6</version>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang</groupId>
          <artifactId>scala-library</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.json4s</groupId>
      <artifactId>json4s-native_${version.scala.epoch}</artifactId>
      <version>3.6.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <version>3.6.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-shared-utils</artifactId>
      <version>[3.3.3,)</version>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${version.scala.epoch}</artifactId>
      <version>${version.scalatest}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.scala-lang.modules</groupId>
          <artifactId>scala-xml_${version.scala.epoch}</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <build>
    <sourceDirectory>src/main/scala</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <skip>true</skip>
          <skipMain>true</skipMain>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>4.0.2</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${versionScalaRelease}</scalaVersion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.7.1</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.maven.doxia</groupId>
            <artifactId>doxia-module-twiki</artifactId>
            <version>1.8</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.scalastyle</groupId>
        <artifactId>scalastyle-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <failOnWarning>false</failOnWarning>
          <outputFile>${project.build.directory}/site/scalastyle-output.xml</outputFile>
          <configLocation>${project.basedir}/scalastyle-config.xml</configLocation>
          <includeTestSourceDirectory>false</includeTestSourceDirectory>
          <outputEncoding>UTF-8</outputEncoding>
          <sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory>
          <verbose>false</verbose>
          <testSourceDirectory>${project.basedir}/src/test/scala</testSourceDirectory>
          <failOnViolation>true</failOnViolation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <id>test</id>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <parallel>false</parallel>
          <reportsDirectory>
            ${project.build.directory}/surefire-reports
          </reportsDirectory>
          <filereports>TestSuite.txt</filereports>
          <junitxml>.</junitxml>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scoverage</groupId>
        <artifactId>scoverage-maven-plugin</artifactId>
        <version>1.4.0-RC1</version>
        <executions>
          <execution>
            <id>scoverage_unit</id>
            <phase>site</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <highlighting>true</highlighting>
          <minimumCoverage>70</minimumCoverage>
          <failOnMinimumCoverage>true</failOnMinimumCoverage>
          <scalaVersion>${versionScalaRelease}</scalaVersion>
          <excludedPackages>java..*;scala..*</excludedPackages>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer 
                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${mainClass}</mainClass>
</transformer>
              </transformers>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>exec</shadedClassifierName>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.redhat.victims.maven</groupId>
        <artifactId>security-versions</artifactId>
        <version>1.0.6</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>4.0.2</version>
        <configuration>
          <jvmArgs>
            <jvmArg>-Xms64m</jvmArg>
            <jvmArg>-Xmx1024m</jvmArg>
          </jvmArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>summary</report>
              <report>dependencies</report>
              <report>dependency-info</report>
              <report>dependency-convergence</report>
              <report>team</report>
              <report>licenses</report>
              <report>scm</report>
              <report>issue-management</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.1</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.5</version>
        <configuration>
          <omitVisitors>${findbugsOmissions}</omitVisitors>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scoverage</groupId>
        <artifactId>scoverage-maven-plugin</artifactId>
        <version>1.4.0-RC1</version>
        <reportSets>
          <reportSet>
            <id>default</id>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
  <profiles>
    <profile>
      <id>RPM builder</id>
      <activation>
        <os>
          <name>Linux</name>
        </os>
        <file>
          <exists>/usr/binm/rpmbuild</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.2.0</version>
            <executions>
              <execution>
                <id>generate-rpm</id>
                <phase>package</phase>
                <goals>
                  <goal>rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <license>Apache 2.0 (c) 2019</license>
              <preinstallScriptlet>
                <script/>
              </preinstallScriptlet>
              <group>Development/Tools</group>
              <prefix>/usr</prefix>
              <packager>SWWDC</packager>
              <distribution>${project.name}</distribution>
              <defineStatements>
                <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
              </defineStatements>
              <prereqs>${rpmPackageDependencies}</prereqs>
              <mappings>
                <mapping>
                  <sources>
                    <source>
                      <location>${launcherName}</location>
                    </source>
                  </sources>
                  <username>root</username>
                  <directory>/usr/bin</directory>
                  <groupname>root</groupname>
                  <filemode>555</filemode>
                </mapping>
                <mapping>
                  <directory>/usr/share/lib/${project.artifactId}</directory>
                  <username>root</username>
                  <groupname>root</groupname>
                  <sources>
                    <source>
                      <location>target/${project.artifactId}-${project.version}-exec.jar</location>
                    </source>
                  </sources>
                  <filemode>444</filemode>
                </mapping>
              </mappings>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>deb-builder</id>
      <activation>
        <os>
          <name>Linux</name>
        </os>
        <file>
          <exists>/usr/bin/dpkg</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.3</version>
            <executions>
              <execution>
                <id>copy-deb-resources</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${basedir}/target/deb</outputDirectory>
                  <resources>
                    <resource>
                      <directory>.</directory>
                      <targetPath>usr/bin/</targetPath>
                      <includes>
                        <include>${launcherName}</include>
                      </includes>
                    </resource>
                  </resources>
                  <overwrite>false</overwrite>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>fix-launcher-permissions</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <chmod perm="555">
                      <fileset dir="${basedir}/target/deb">
                        <include name="usr/bin/${launcherName}"/>
                      </fileset>
                    </chmod>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>fix-jar-permissions</id>
                <phase>package</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <chmod perm="444">
                      <fileset dir="${basedir}/target">
                        <include name="${project.artifactId}-${project.version}-exec.jar"/>
                      </fileset>
                    </chmod>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>net.sf.debian-maven</groupId>
            <artifactId>debian-maven-plugin</artifactId>
            <version>1.0.6</version>
            <executions>
              <execution>
                <id>generate-deb</id>
                <phase>package</phase>
                <goals>
                  <goal>package</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <packageSection>${packageSection}</packageSection>
              <packageDependencies>
                <packageDependency>${debPackageDependency}</packageDependency>
              </packageDependencies>
              <excludeAllArtifacts>true</excludeAllArtifacts>
              <packageTitle>${project.name}</packageTitle>
              <packageName>${project.artifactId}</packageName>
              <projectUrl>${project.url}</projectUrl>
              <excludeAllDependencies>true</excludeAllDependencies>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>windows-installer-builder</id>
      <activation>
        <file>
          <!-- <exists>C:\\Program Files (x86)\\NSIS\\Bin\\makensis.exe</exists> -->
          <exists>/usr/bin/makensis</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.digitalmediaserver</groupId>
            <artifactId>nsis-maven-plugin</artifactId>
            <version>1.0.2</version>
            <executions>
              <execution>
                <id>build-windows-installer</id>
                <goals>
                  <goal>make</goal>
                </goals>
                <configuration>
                  <outputFile>${project.build.finalName}.exe</outputFile>
                  <scriptFile>nsis/${project.artifactId}.nsi</scriptFile>
                  <attachArtifact>false</attachArtifact>
                </configuration>
              </execution>
            </executions>
            <configuration>
              <compressionDictSize>64</compressionDictSize>
              <defines>
                <PROJECT_NAME_SHORT>${project.name}</PROJECT_NAME_SHORT>
                <PROJECT_NAME_CAMEL>${project.artifactId}</PROJECT_NAME_CAMEL>
              </defines>
              <makensisExecutable>
                C:\\Program Files (x86)\\NSIS\\Bin\\makensis.exe
              </makensisExecutable>
              <makensisExecutableMacOS>
                ${project.external-resources}/third-party/nsis/Bin/makensisMacOS
              </makensisExecutableMacOS>
              <makensisExecutableLinux>/usr/bin/makensis</makensisExecutableLinux>
              <compression>lzma</compression>
              <compressionIsFinal>true</compressionIsFinal>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
